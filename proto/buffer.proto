syntax = "proto3";

package gomokuBuffer;

message Node {
    int32 X = 1;
    int32 Y = 2;
    int32 Player = 3;
}

message Win {
    int32 player = 1;
}

service Game {
    rpc CDGame(CDGameRequest) returns (CDGameResponse) {} /* simple RPC */
    rpc Played(StonePlayed) returns (StonePlayed) {} /* simple RPC */
    rpc CheckRules(StonePlayed) returns (CheckRulesResponse) {}
}

message CDGameRequest {
    string GameID = 1;
    bool Delete = 2;
}

message CheckRulesResponse {
    bool IsPossible = 1;
    repeated Node Captured = 2;
    int32 NbStonedCaptured = 3;
    bool PartyFinish = 4;
    int32 WinIs = 5;
}

message CDGameResponse {
    bool IsSuccess = 1;
    string Message = 2;
}

message StonePlayed {
    Node CurrentPlayerMove = 1;
    string GameID = 2;
}